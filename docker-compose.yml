version: '2'
services:
  nginx:
    image: mcneilco/letsencrypt-nginx:latest
    depends_on:
      - acas
    restart: always
    environment:
      - MY_DOMAIN_NAME=${MY_DOMAIN_NAME}
      - LETSENCRYPT_HOST=letsencrypt
      - LETSENCRYPT_PORT=80
      - LETSENCRYPT_SSL_PORT=443
      - ACAS_HOST=acas
      - ACAS_PORT=3000
    ports: 
      - "80:80"
      - "443:443"
    volumes_from:
      - letsencrypt
  letsencrypt:
    image: quay.io/letsencrypt/letsencrypt:latest
    command:  bash -c "sleep 6 && certbot certonly --staging --standalone -d $MY_DOMAIN_NAME --text --agree-tos --email support@mcneilco.com --server https://acme-staging.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --renew-by-default --standalone-supported-challenges http-01"
#    command:  bash -c "sleep 6 && certbot certonly --standalone -d $MY_DOMAIN_NAME --text --agree-tos --email support@mcneilco.com --server https://acme-v01.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --keep-until-expiring --standalone-supported-challenges http-01"
    entrypoint: ""
    volumes:
      - certs:/etc/letsencrypt
      - /var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    environment:
      - TERM=xterm
  acas:
    image: ${IMAGE}
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     ACAS_TAG: ${ACAS_TAG}
    restart: always
    ports:
     - "3000:3000"
     - "3001:3001"
     - "5858:5858"
    environment:
     - APP_NAME=${DEPLOY_MODE}
     - PREPARE_MODULE_CONF_JSON=true
     - PREPARE_CONFIG_FILES=true
     - RUN_SYSTEM_TEST=false
     - DOCKER_HOST_IP=localhost
     - NODE_ENV=integration
     - SOURCE_DIRECTORIES=/home/runner/acas_custom/sources/mcneilco-modules,/home/runner/acas_custom/sources/lot_aliquot_inventory,/home/runner/acas_custom
    volumes:
     - filestore:/home/runner/build/privateUploads
     - logs:/home/runner/logs
     - /home/runner/build/bin
     - /home/runner/build/src/r
     - /home/runner/build/conf/compiled
    # Add chemaxon marvinjs here
    # - ./chemaxon/marvinjs:/home/runner/build/public/CmpdReg/marvinjs
     # Please add any dev volumes below this line
     # - ../demo_oss:/home/runner/oss_base
     # - ../demo_private:/home/runner/acas_private
     # - ../demo_lot_inventory:/home/runner/acas_lot_inventory
     # - ./:/home/runner/acas_custom
     # - ./modules/BuildUtilities/:/home/runner/acas/modules/BuildUtilities
    env_file:
      - ./conf/docker/acas/environment/acas.env
# Dev Command
    # command: ["bin/acas.sh", "run", "acas", "dev"]
# Start command
    command: ["bin/acas.sh", "run", "acas", "start"]
  rservices:
    image: mcneilco/racas-oss:${ACAS_TAG}
    restart: always
    ports:
     - "1080:1080"
    environment:
     - PREPARE_MODULE_CONF_JSON=false
     - PREPARE_CONFIG_FILES=false
    volumes_from:
     - acas
    volumes:
      - filestore:/home/runner/build/privateUploads
      - logs:/home/runner/logs
    command: ["bin/acas.sh", "run", "rservices"]
  db:
    image: mcneilco/acas-postgres:1.0-bingo
    restart: always
    volumes:
     - dbstore:/var/lib/postgresql/data
    env_file:
      - ./conf/docker/postgres/environment/postgres.env
      - ./conf/docker/db/environment/db.env
      - ./conf/docker/acas/environment/acas.env
      - ./conf/docker/cmpdreg/environment/cmpdreg.env
      - ./conf/docker/seurat/environment/seurat.env
    ports:
     - "5432:5432"
  tomcat:
    image: mcneilco/tomcat-maven:openjdk8
    restart: always
    depends_on:
     - db
    ports:
     - "8080:8080"
     - "8000:8000"
    environment:
     - ACAS_HOME=/home/runner/build
     - CATALINA_OPTS=-Xms512M -Xmx1024M -XX:MaxPermSize=512m
     - JAVA_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
    volumes_from:
     - roo
     - acas
     - cmpdreg
    env_file:
      - ./conf/docker/acas/environment/acas.env
      - ./conf/docker/roo/environment/roo.env
      - ./conf/docker/cmpdreg/environment/cmpdreg.env
    command: catalina.sh run
  roo:
    image: mcneilco/acas-roo-server-oss:${ACAS_TAG}
    volumes:
     - /usr/local/tomcat/webapps/acas
    command: /bin/true
  cmpdreg:
    image: mcneilco/acas-cmpdreg-roo-server-oss:${ACAS_TAG}
    volumes:
     - /usr/local/tomcat/webapps/cmpdreg
    # Add chemaxon license files here
    # - ./chemaxon/licenses/marvin4js-license.cxl:/usr/local/tomcat/webapps/ROOT/marvin4js-license.cxl
    # - ./chemaxon/licenses/license.cxl:/root/.chemaxon/license.cxl
    command: /bin/true
  backup:
    image: mcneilco/cron-backup:latest
    env_file:
      - ./conf/docker/postgres/environment/postgres.env
    volumes_from:
      - acas
volumes:
  dbstore:
  filestore:
  logs:
  certs: